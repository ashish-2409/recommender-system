# -*- coding: utf-8 -*-
"""recommender.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LnmoeFohLqyBh6ajH6IBYbbhMvoRAXmP
"""

import pandas as pd
import missingno as msno
#creating a dataframe from movies metadata csv
data=pd.read_csv('movies_metadata.csv')

data.head()

#taking some part of complete data
data=data.head(20000)

msno.matrix(data)

#dropping unncessary features
data=data.drop(['homepage'],axis=1)



data=data.drop(['poster_path'],axis=1)

#filling na in runtime by mean of runtime feature
x=data['runtime'].mean()
data['runtime'].fillna(value=x, inplace=True)

#remaining NA are strings such as overview and tagline and the cannot be imputed easily so replacing them with empty string
data=data.fillna('')

data.isnull().sum()

msno.matrix(data)

#basically encoding text or string in the dataset so that it can be fed to the model
#using tfidfvectorize it tokenizes the documents and caculate inverse frequency weightings
from sklearn.feature_extraction.text import TfidfVectorizer
tf = TfidfVectorizer(analyzer='word', stop_words='english')
matrix = tf.fit_transform(data['overview'])

#creating a similarity matrix using cosine_similarity function of sklearn
from sklearn.metrics.pairwise import cosine_similarity
cosine_similarities = cosine_similarity(matrix,matrix)

#creating a series to store index of movies
indices = pd.Series(data.index, index=data['original_title'])
#defining function to find similarity scores related to given movie
#return a list of titles of movies which are similar to original title
def movie_recommend(original_title):
  index = indices[original_title]
  sim_scores = list(enumerate(cosine_similarities[index]))
  sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
  movie_indices=[]
  for i in sim_scores:
    movie_indices.append(i[0])  
  final_ans=[]
  for i in movie_indices:
    final_ans.append(data['original_title'].iloc[i])
  return final_ans

#testing model
movie_recommend('Toy Story')[:5]
#top 5 movies

